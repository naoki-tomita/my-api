group "Example"
version "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.3.11"
    ext.ktor_version = "1.1.1"

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "java"
apply plugin: "kotlin"

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

test {
    useJUnitPlatform()
}

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.exposed:exposed:0.11.2"
    compile "org.xerial:sqlite-jdbc:3.21.0.1"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
    testImplementation "io.mockk:mockk:1.9"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.1"
    testImplementation 'org.amshove.kluent:kluent:1.48'
}

// アプリのエントリポイントを指定する
// gradle runで実行できるようになる
apply plugin: "application"
// fun main()の記載されている場所がMain.ktファイルの場合、Main"Kt"と、"Kt"をつければよい。
mainClassName = "MainKt"

jar {
    manifest {
        // jarを生成する際のエントリポイントを指定する
        attributes 'Main-Class': "MainKt"
    }
    // 依存しているものを全部jarにつめこむコマンド。よーわからん
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}